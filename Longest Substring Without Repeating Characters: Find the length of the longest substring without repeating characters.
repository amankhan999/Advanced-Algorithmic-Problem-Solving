#include <iostream>
#include <unordered_map>
using namespace std;

int lengthOfLongestSubstring(string s) {
    unordered_map<char, int> charIndex; // Stores character last seen index
    int maxLength = 0, left = 0;

    for (int right = 0; right < s.length(); right++) {
        if (charIndex.find(s[right]) != charIndex.end()) {
            // Move left pointer if character is repeated
            left = max(charIndex[s[right]] + 1, left);
        }
        charIndex[s[right]] = right; // Update last seen index
        maxLength = max(maxLength, right - left + 1);
    }

    return maxLength;
}

int main() {
    string s = "abcabcbb";
    cout << "Length of Longest Substring Without Repeating Characters: " << lengthOfLongestSubstring(s) << endl;
    return 0;
}
